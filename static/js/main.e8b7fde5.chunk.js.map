{"version":3,"sources":["logo.svg","store/app/index.js","store/createStore.js","store/app/action.js","components/assets/img/svg/dutch-man.svg","components/assets/img/svg/dutch-woman.svg","components/pages/Dashboard.js","components/pages/Administrator.js","components/pages/Covid.js","components/RootApp.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","datas_geo","luas_chart","datas_pen","reducer","combineReducers","app","state","action","type","datas","store","createStore","applyMiddleware","thunk","url","COLORS","Math","PI","connect","dispatch","getDataGeo","axios","get","then","response","res","data","map","v","i","push","nama_kecamatan","parseInt","luas","getDataPen","console","log","React","useEffect","className","PieChart","width","height","Pie","cx","cy","labelLine","label","outerRadius","fill","dataKey","entry","index","Cell","length","style","display","justifyContent","alignItems","id","bujur","lintang","value","displayType","thousandSeparator","renderText","formattedValue","batas_utara","batas_timur","batas_selatan","batas_barat","jt_organosol","jt_alluvial","jt_pedsol","jt_latosol","jt_pmk","total_perempuan","total_laki","textAlign","src","man","woman","kec","jumlah_penduduk","jumlah_laki","jumlah_perempuan","jumlah_penduduk_per_kelurahan","vx","nama_kelurahan","laki","perempuan","Admionistrator","props","iframeRef","useRef","h1","current","contentWindow","document","body","querySelector","ref","scrolling","href","to","exact","path","component","Dashboard","Pancagatra","Covid","App","Store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e8b7fde5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const initialState = {\n    datas_geo: [],\n    luas_chart: [],\n    datas_pen: []\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case 'STORE_DATA_GEO':\n            return {\n                ...state,\n                datas_geo: action.datas,\n                luas_chart: action.luas_chart\n            }\n        case 'STORE_DATA_PEN':\n            return {\n                ...state,\n                datas_pen: action.datas,\n            }\n        default:\n            return state\n    }\n}","\nimport {compose, createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from \"redux-thunk\";\n\nimport app from './app';\n\nconst reducer = combineReducers({\n    app,\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;","import axios from 'axios';\n\nconst url = 'https://dinartech.com/siadhi/public/api'\n\nconst storeDataGeo = (payload, chart) => ({ type: 'STORE_DATA_GEO', datas: payload, luas_chart: chart })\nconst storeDataPenduduk = (payload) => ({ type: 'STORE_DATA_PEN', datas: payload })\n\nexport const getDataGeo = () => {\n    return (dispatch) => {\n        axios.get(`${url}/getgeo`)\n            .then(response => {\n                let res = response.data.data\n                let data = []\n                res.map((v, i) =>\n                    data.push({ 'name': v.nama_kecamatan, 'value': parseInt(v.luas) })\n                )\n                dispatch(storeDataGeo(res, data)) //Data untuk chart Luas\n            })\n    }\n}\n\nexport const getDataPen = () => {\n    return (dispatch) => {\n        axios.get(`${url}/getpenduduk`)\n            .then(response => {\n                console.log(response.data)\n                dispatch(storeDataPenduduk(response.data)) \n            })\n    }\n}","export default __webpack_public_path__ + \"static/media/dutch-man.7c1e5761.svg\";","export default __webpack_public_path__ + \"static/media/dutch-woman.2b15c486.svg\";","import React from 'react';\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\nimport { connect } from \"react-redux\";\nimport { getDataGeo, getDataPen } from './../../store/app/action';\nimport NumberFormat from 'react-number-format';\n\nimport man from './../assets/img/svg/dutch-man.svg';\nimport woman from './../assets/img/svg/dutch-woman.svg';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n\nconst data = [\n    { name: 'Group A', value: 400 },\n    { name: 'Group B', value: 300 },\n    { name: 'Group C', value: 300 },\n    { name: 'Group D', value: 200 },\n];\n\nfunction Dashboard({ getDataGeo, datas_geo, luas_chart, getDataPen, datas_pen }) {\n\n    React.useEffect(() => {\n        getDataGeo()\n        getDataPen()\n        console.log(luas_chart)\n    }, [])\n\n\n\n    return (\n        <>\n            <div className=\"main-content\">\n                <div className=\"header\">\n                    <p>Geografis</p>\n                </div>\n                <div className=\"flex-row\">\n                    <div className=\"w-30\">\n                        <PieChart width={400} height={400}>\n                            <Pie\n                                data={luas_chart}\n                                cx=\"50%\"\n                                cy=\"50%\"\n                                labelLine\n                                label\n                                outerRadius={80}\n                                fill=\"#8884d8\"\n                                dataKey=\"value\"\n                            >\n                                {luas_chart.map((entry, index) => (\n                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                                ))}\n                            </Pie>\n                        </PieChart>\n                    </div>\n                    <div className=\"w-70 p-20\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <table id=\"customers\">\n                            <tr>\n                                <th >Kecamatan</th>\n                                <th>Koordinat</th>\n                                <th>Luas (ha)</th>\n                            </tr>\n                            {datas_geo.map((v, i) =>\n                                <tr>\n                                    <td >{v.nama_kecamatan}</td>\n                                    <td>{v.bujur} dan {v.lintang}</td>\n                                    <td><NumberFormat\n                                        value={v.luas}\n                                        displayType={'text'}\n                                        thousandSeparator={true}\n                                        renderText={formattedValue => <span >{formattedValue} ha</span>}\n                                    /></td>\n                                </tr>\n                            )}\n\n                        </table>\n                    </div>\n                </div>\n\n                <div className=\"flex-col p-20\">\n                    <div className=\"border-grey\">\n                        <div className=\"header mb-20\">\n                            <p>Perbatasan</p>\n                        </div>\n                        <div className=\"flex-row p-20\">\n                            <div className=\"w-100 p-20\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                <table id=\"customers\">\n                                    <tr>\n                                        <th>Kecamatan</th>\n                                        <th>Batas Utara</th>\n                                        <th>Batas Timur</th>\n                                        <th>Batas Selatan</th>\n                                        <th>Batas Barat</th>\n                                    </tr>\n                                    {datas_geo.map((v, i) =>\n                                        <tr>\n                                            <td style={{ width: 250 }}> {v.nama_kecamatan}</td>\n                                            <td>{v.batas_utara}</td>\n                                            <td>{v.batas_timur}</td>\n                                            <td>{v.batas_selatan}</td>\n                                            <td>{v.batas_barat}</td>\n                                        </tr>\n                                    )}\n\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex-col p-20\">\n                    <div className=\"border-grey\">\n                        <div className=\"header mb-20\">\n                            <p>Jenis Tanah</p>\n                        </div>\n                        <div className=\"flex-row p-20\">\n                            <div className=\"w-100\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                <table id=\"customers\">\n                                    <tr>\n                                        <th>Kecamatan</th>\n                                        <th>Organosol</th>\n                                        <th>Alluvial</th>\n                                        <th>Pedsol</th>\n                                        <th>Latosol</th>\n                                        <th>PMK</th>\n                                    </tr>\n                                    {datas_geo.map((v, i) =>\n                                        <tr>\n                                            <td style={{ width: 250 }}> {v.nama_kecamatan}</td>\n                                            <td>\n                                                <NumberFormat\n                                                    value={v.jt_organosol}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    renderText={formattedValue => <span >{formattedValue} ha</span>}\n                                                />\n                                            </td>\n                                            <td>\n                                                <NumberFormat\n                                                    value={v.jt_alluvial}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    renderText={formattedValue => <span >{formattedValue} ha</span>}\n                                                />\n                                            </td>\n                                            <td>\n                                                <NumberFormat\n                                                    value={v.jt_pedsol}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    renderText={formattedValue => <span >{formattedValue} ha</span>}\n                                                />\n                                            </td>\n                                            <td><NumberFormat\n                                                value={v.jt_latosol}\n                                                displayType={'text'}\n                                                thousandSeparator={true}\n                                                renderText={formattedValue => <span >{formattedValue} ha</span>}\n                                            /></td>\n                                            <td><NumberFormat\n                                                value={v.jt_pmk}\n                                                displayType={'text'}\n                                                thousandSeparator={true}\n                                                renderText={formattedValue => <span >{formattedValue} ha</span>}\n                                            /></td>\n                                        </tr>\n                                    )}\n\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"main-content\">\n                <div className=\"header\">\n                    <p>Penduduk</p>\n                </div>\n                <div className=\"flex-row\">\n                    <div className=\"w-40 p-20 \">\n                        <div className=\"card p-20 w-100 bg-green flex-column\">\n                            <NumberFormat\n                                value={datas_pen.length !== 0 ? parseInt(datas_pen.data[0].total_perempuan[0].total_perempuan) + parseInt(datas_pen.data[0].total_laki[0].total_laki) : ''}\n                                displayType={'text'}\n                                thousandSeparator={true}\n                                renderText={formattedValue => <span className=\"h1-main\">{formattedValue} </span>}\n                            />\n                            <br />\n                            <p>Jumlah Penduduk Kota Singkawang</p>\n                        </div>\n                        <div className=\"card flex-row w-100\">\n                            <div className=\"card bg-blue p-20 w-50 flex-col\" style={{ textAlign: 'center' }} >\n                                <div className=\"w-100\">\n                                    <img src={man} className=\"w-100\" />\n                                </div>\n                                <div className=\"w-100\">\n                                    <NumberFormat\n                                        value={datas_pen.length !== 0 ? datas_pen.data[0].total_laki[0].total_laki : ''}\n                                        displayType={'text'}\n                                        thousandSeparator={true}\n                                        renderText={formattedValue => <span className=\"h1-sub\">{formattedValue} </span>}\n                                    />\n                                    <p>Laki laki</p>\n                                </div>\n                            </div>\n                            <div className=\"card bg-pink p-20 w-50 flex-col\" style={{ textAlign: 'center' }} >\n                                <div className=\"w-100\">\n                                    <img src={woman} className=\"w-100\" />\n                                </div>\n                                <div className=\"w-100\">\n                                    <NumberFormat\n                                        value={datas_pen.length !== 0 ? datas_pen.data[0].total_perempuan[0].total_perempuan : ''}\n                                        displayType={'text'}\n                                        thousandSeparator={true}\n                                        renderText={formattedValue => <span className=\"h1-sub\">{formattedValue} </span>}\n                                    />\n                                    <p>Perempuan</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"w-60 p-20\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n\n                    </div>\n                </div>\n\n                <div className=\"flex-col p-20 w-100\">\n                    {datas_pen.length !== 0 ?\n                        datas_pen.kec.map((v, i) =>\n\n                            <div key={i} className=\"flex-row border-grey mb-20 w-100 \">\n\n                                <div className=\"flex-col w-40 pr-10\">\n                                    <div className=\"card p-20 w-100 bg-imperial flex-column\">\n                                        <span >{v.nama_kecamatan} </span>\n                                    </div>\n                                    <div className=\"card p-20 w-100 bg-blue flex-column\">\n                                        <NumberFormat\n                                            value={v.jumlah_penduduk[0].jumlah_laki}\n                                            displayType={'text'}\n                                            thousandSeparator={true}\n                                            renderText={formattedValue => <span className=\"h1-sub\">{formattedValue} </span>}\n                                        />\n                                        <br />\n                                        <p>Laki Laki</p>\n                                    </div>\n                                    <div className=\"card p-20 w-100 bg-pink flex-column\">\n                                        <NumberFormat\n                                            value={v.jumlah_penduduk[0].jumlah_perempuan}\n                                            displayType={'text'}\n                                            thousandSeparator={true}\n                                            renderText={formattedValue => <span className=\"h1-sub\">{formattedValue} </span>}\n                                        />\n                                        <br />\n                                        <p>Perempuan</p>\n                                    </div>\n                                    <div className=\"card p-20 w-100 bg-green flex-column\">\n                                        <NumberFormat\n                                            value={parseInt(v.jumlah_penduduk[0].jumlah_perempuan) + parseInt(v.jumlah_penduduk[0].jumlah_laki)}\n                                            displayType={'text'}\n                                            thousandSeparator={true}\n                                            renderText={formattedValue => <span className=\"h1-sub\">{formattedValue} </span>}\n                                        />\n                                        <br />\n                                        <p>Total Penduduk {v.nama_kecamatan}</p>\n                                    </div>\n\n                                </div>\n                                <div className=\"flex-col w-60 flex-center pr-10\">\n                                    <table id=\"customers2\">\n                                        <tr>\n                                            <th>Kelurahan</th>\n                                            <th>Laki - laki</th>\n                                            <th>Perempuan</th>\n                                            <th>Jumlah</th>\n                                        </tr>\n                                        {v.jumlah_penduduk_per_kelurahan.map((vx, i) =>\n                                            <tr key={i}>\n                                                <td>{vx.nama_kelurahan}</td>\n                                                <td>\n                                                    <NumberFormat\n                                                        value={vx.laki}\n                                                        displayType={'text'}\n                                                        thousandSeparator={true}\n                                                        renderText={formattedValue => <>{formattedValue} </>}\n                                                    />\n                                                </td>\n                                                <td>\n                                                    <NumberFormat\n                                                        value={vx.perempuan}\n                                                        displayType={'text'}\n                                                        thousandSeparator={true}\n                                                        renderText={formattedValue => <>{formattedValue} </>}\n                                                    />\n                                                </td>\n                                                <td>\n                                                    <NumberFormat\n                                                        value={parseInt(vx.laki) + parseInt(vx.perempuan)}\n                                                        displayType={'text'}\n                                                        thousandSeparator={true}\n                                                        renderText={formattedValue => <>{formattedValue} </>}\n                                                    />\n                                                </td>\n                                            </tr>\n                                        )}\n\n                                    </table>\n                                </div>\n                            </div>\n                        )\n                        :\n                        ''\n                    }\n\n                </div>\n            </div>\n\n            <div className=\"main-content\">\n                <div className=\"header\">\n                    <p>Agama</p>\n                </div>\n                <div className=\"flex-row\">\n\n                </div>\n            </div>\n\n            <div className=\"main-content\">\n                <div className=\"header\">\n                    <p>Footer</p>\n                </div>\n                <div className=\"flex-row\">\n\n                </div>\n            </div>\n        </>\n    )\n}\n\n\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n            {`${(percent * 100).toFixed(0)}%`}\n        </text>\n    );\n}\n\nconst mapStateToProps = ({ app }) => {\n    return {\n        datas_geo: app.datas_geo,\n        luas_chart: app.luas_chart,\n        datas_pen: app.datas_pen\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getDataGeo: () => dispatch(getDataGeo()),\n        getDataPen: () => dispatch(getDataPen())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","import React from 'react'\n\nexport default function Admionistrator() {\n    return (\n        <>\n            <div className=\"main-content\">\n                <div className=\"header\">\n                    <p>Politik</p>\n                </div>\n               \n            </div>\n            <div className=\"main-content\">\n                <div className=\"header\">\n                    <p>Kantor Pemerintahan</p>\n                </div>\n                \n            </div>\n            <div className=\"main-content\">\n                <div className=\"header\">\n                    <p>Tempat Ibadah</p>\n                </div>\n                \n            </div>\n            <div className=\"main-content\">\n                <div className=\"header\">\n                    <p>Perusahaan</p>\n                </div>\n                \n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nexport const Covid = (props) => {\n\n    const iframeRef= React.useRef()\n\n    React.useEffect(() => {\n            const h1 = iframeRef.current.contentWindow.document.body.querySelector('.page-title')\n            console.log(h1)\n    }, [iframeRef.current])\n\n    return (\n        <>\n            <div className=\"main-content\">\n                <div className=\"header\">\n                    <p>Penyebaran Covid 19</p>\n                </div>\n                <div className=\"w-100 p-20\" >\n                <iframe ref={iframeRef} src=\"https://siagacorona.semarangkota.go.id/halaman/covid19\" width=\"100%\" height=\"2500px\"  scrolling=\"no\"></iframe>\n                </div>\n            </div>\n            <div className=\"main-content\">\n                <div className=\"header\">\n                    <p>footer</p>\n                </div>\n                \n            </div>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Covid)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n    Route,\n    NavLink,\n    HashRouter\n} from \"react-router-dom\";\nimport Dashboard from './pages/Dashboard';\nimport Pancagatra from './pages/Administrator';\nimport Covid from './pages/Covid';\n\nimport './style/style.css';\n\nexport const RootApp = (props) => {\n\n    const sideBarEvent = () => {\n        document.querySelector(\".sidebar\").classList.toggle('open')\n        menuBtnChange()\n    }\n\n    const menuBtnChange = () => {\n        if (document.querySelector(\".sidebar\").classList.contains(\"open\")) {\n            document.querySelector(\"#btn\").classList.replace(\"bx-menu\", \"bx-menu-alt-right\");//replacing the iocns class\n        } else {\n            document.querySelector(\"#btn\").classList.replace(\"bx-menu-alt-right\", \"bx-menu\");//replacing the iocns class\n        }\n    }\n\n\n    return (\n        <HashRouter>\n            <div>\n                <div className=\"sidebar open\">\n                    {/* <div className=\"logo-details\">\n                        <i className='bx bxl-c-plus-plus icon'></i>\n                        <div className=\"logo_name\">CodingLab</div>\n                        <i className='bx bx-menu' id=\"btn\" onClick={sideBarEvent}></i>\n                    </div> */}\n                    <ul className=\"nav-list\">\n                        <li>\n                            <a href=\"#\">\n                                <NavLink to=\"/\">\n                                    <i className='bx bx-grid-alt'></i>\n                                    <span className=\"links_name\">Trigatra</span>\n                                </NavLink>\n                            </a>\n                            <span className=\"tooltip\">Trigatra</span>\n                        </li>\n                        <li>\n                            <a href=\"#\">\n                                <NavLink to=\"/pancagatra\">\n                                    <i className='bx bx-user' ></i>\n                                    <span className=\"links_name\">Pancagatra</span>\n                                </NavLink>\n                            </a>\n                            <span className=\"tooltip\">Pancagatra</span>\n                        </li>\n                        <li>\n                            <a href=\"#\">\n                                <NavLink to=\"/covid\">\n                                    <i className='bx bx-chat' ></i>\n                                    <span className=\"links_name\">Covid 19</span>\n                                </NavLink>\n                            </a>\n                            <span className=\"tooltip\">Covid 19</span>\n                        </li>\n\n                    </ul>\n                </div>\n                <section className=\"home-section\">\n                    <Route exact path=\"/\" component={Dashboard} />\n                    <Route path=\"/pancagatra\" component={Pancagatra} />\n                    <Route path=\"/covid\" component={Covid} />\n                </section>\n            </div>\n        </HashRouter>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootApp)\n","  \nimport logo from './logo.svg';\nimport './App.css';\nimport { Provider } from 'react-redux';\n\nimport Store from './store/createStore';\nimport RootApp from './components/RootApp';\n\nfunction App() {\n    return (\n        <Provider store={Store}>\n            <RootApp />\n        </Provider>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
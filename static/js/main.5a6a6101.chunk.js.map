{"version":3,"sources":["logo.svg","store/app/index.js","store/createStore.js","store/app/action.js","components/assets/img/svg/dutch-man.svg","components/assets/img/svg/dutch-woman.svg","components/pages/Dashboard.js","components/pages/Pancagatra.js","components/pages/Covid.js","components/RootApp.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","datas_geo","luas_chart","datas_pen","datas_tempat_ibadah","reducer","combineReducers","app","state","action","type","datas","store","createStore","applyMiddleware","thunk","url","COLORS","Math","PI","connect","dispatch","getDataGeo","axios","get","then","response","res","data","map","v","i","push","nama_kecamatan","parseInt","luas","getDataPen","console","log","React","useEffect","className","PieChart","width","height","Pie","cx","cy","labelLine","label","outerRadius","fill","dataKey","entry","index","Cell","length","style","display","justifyContent","alignItems","id","bujur","lintang","value","displayType","thousandSeparator","renderText","formattedValue","batas_utara","batas_timur","batas_selatan","batas_barat","jt_organosol","jt_alluvial","jt_pedsol","jt_latosol","jt_pmk","total_perempuan","total_laki","textAlign","src","man","woman","kec","jumlah_penduduk","jumlah_laki","jumlah_perempuan","jumlah_penduduk_per_kelurahan","vx","nama_kelurahan","laki","perempuan","getTempatIbadah","useState","columns","field","attributes","sort","rows","datatable","hover","entriesOptions","entries","pagesAmount","searchTop","searchBottom","pdfjs","GlobalWorkerOptions","workerSrc","version","props","setNumPages","file","onLoadSuccess","numPages","pageNumber","href","to","exact","path","component","Dashboard","Pancagatra","Covid","App","Store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a6a6101.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const initialState = {\r\n    datas_geo: [],\r\n    luas_chart: [],\r\n    datas_pen: [],\r\n    datas_tempat_ibadah: []\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'STORE_DATA_GEO':\r\n            return {\r\n                ...state,\r\n                datas_geo: action.datas,\r\n                luas_chart: action.luas_chart\r\n            }\r\n        case 'STORE_DATA_PEN':\r\n            return {\r\n                ...state,\r\n                datas_pen: action.datas,\r\n            }\r\n        case 'STORE_DATA_TEMPAT_IBADAH':\r\n            return {\r\n                ...state,\r\n                datas_tempat_ibadah: action.datas,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nimport {compose, createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport app from './app';\r\n\r\nconst reducer = combineReducers({\r\n    app,\r\n})\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import axios from 'axios';\r\n\r\nconst url = 'https://dinartech.com/siadhi/public/api'\r\n\r\nconst storeDataGeo = (payload, chart) => ({ type: 'STORE_DATA_GEO', datas: payload, luas_chart: chart })\r\nconst storeDataPenduduk = (payload) => ({ type: 'STORE_DATA_PEN', datas: payload })\r\nconst storeDataTempatIbadah = (payload) => ({ type: 'STORE_DATA_TEMPAT_IBADAH', datas: payload })\r\n\r\nexport const getDataGeo = () => {\r\n    return (dispatch) => {\r\n        axios.get(`${url}/getgeo`)\r\n            .then(response => {\r\n                let res = response.data.data\r\n                let data = []\r\n                res.map((v, i) =>\r\n                    data.push({ 'name': v.nama_kecamatan, 'value': parseInt(v.luas) })\r\n                )\r\n                dispatch(storeDataGeo(res, data)) //Data untuk chart Luas\r\n            })\r\n    }\r\n}\r\n\r\nexport const getDataPen = () => {\r\n    return (dispatch) => {\r\n        axios.get(`${url}/getpenduduk`)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                dispatch(storeDataPenduduk(response.data)) \r\n            })\r\n    }\r\n}\r\n\r\nexport const getTempatIbadah = () => {\r\n    return (dispatch) => {\r\n        axios.get(`${url}/gettempatibadah`)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                dispatch(storeDataTempatIbadah(response.data.data)) \r\n            })\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/dutch-man.7c1e5761.svg\";","export default __webpack_public_path__ + \"static/media/dutch-woman.2b15c486.svg\";","import React from 'react';\r\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\r\nimport { connect } from \"react-redux\";\r\nimport { getDataGeo, getDataPen } from './../../store/app/action';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport man from './../assets/img/svg/dutch-man.svg';\r\nimport woman from './../assets/img/svg/dutch-woman.svg';\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\n\r\nconst data = [\r\n    { name: 'Group A', value: 400 },\r\n    { name: 'Group B', value: 300 },\r\n    { name: 'Group C', value: 300 },\r\n    { name: 'Group D', value: 200 },\r\n];\r\n\r\nfunction Dashboard({ getDataGeo, datas_geo, luas_chart, getDataPen, datas_pen }) {\r\n\r\n    React.useEffect(() => {\r\n        getDataGeo()\r\n        getDataPen()\r\n        console.log(luas_chart)\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-content\">\r\n                <div className=\"header\">\r\n                    <p>Geografis</p>\r\n                </div>\r\n                <div className=\"flex-row\">\r\n                    <div className=\"w-30\">\r\n                        <PieChart width={400} height={400}>\r\n                            <Pie\r\n                                data={luas_chart}\r\n                                cx=\"50%\"\r\n                                cy=\"50%\"\r\n                                labelLine\r\n                                label\r\n                                outerRadius={80}\r\n                                fill=\"#8884d8\"\r\n                                dataKey=\"value\"\r\n                            >\r\n                                {luas_chart.map((entry, index) => (\r\n                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                ))}\r\n                            </Pie>\r\n                        </PieChart>\r\n                    </div>\r\n                    <div className=\"w-70 p-20\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <table id=\"customers\">\r\n                            <tr>\r\n                                <th >Kecamatan</th>\r\n                                <th>Koordinat</th>\r\n                                <th>Luas (ha)</th>\r\n                            </tr>\r\n                            {datas_geo.map((v, i) =>\r\n                                <tr>\r\n                                    <td >{v.nama_kecamatan}</td>\r\n                                    <td>{v.bujur} dan {v.lintang}</td>\r\n                                    <td><NumberFormat\r\n                                        value={v.luas}\r\n                                        displayType={'text'}\r\n                                        thousandSeparator={true}\r\n                                        renderText={formattedValue => <span >{formattedValue} ha</span>}\r\n                                    /></td>\r\n                                </tr>\r\n                            )}\r\n\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"flex-col p-20\">\r\n                    <div className=\"border-grey\">\r\n                        <div className=\"header mb-20\">\r\n                            <p>Perbatasan</p>\r\n                        </div>\r\n                        <div className=\"flex-row p-20\">\r\n                            <div className=\"w-100 p-20\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                <table id=\"customers\">\r\n                                    <tr>\r\n                                        <th>Kecamatan</th>\r\n                                        <th>Batas Utara</th>\r\n                                        <th>Batas Timur</th>\r\n                                        <th>Batas Selatan</th>\r\n                                        <th>Batas Barat</th>\r\n                                    </tr>\r\n                                    {datas_geo.map((v, i) =>\r\n                                        <tr>\r\n                                            <td style={{ width: 250 }}> {v.nama_kecamatan}</td>\r\n                                            <td>{v.batas_utara}</td>\r\n                                            <td>{v.batas_timur}</td>\r\n                                            <td>{v.batas_selatan}</td>\r\n                                            <td>{v.batas_barat}</td>\r\n                                        </tr>\r\n                                    )}\r\n\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex-col p-20\">\r\n                    <div className=\"border-grey\">\r\n                        <div className=\"header mb-20\">\r\n                            <p>Jenis Tanah</p>\r\n                        </div>\r\n                        <div className=\"flex-row p-20\">\r\n                            <div className=\"w-100\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                <table id=\"customers\">\r\n                                    <tr>\r\n                                        <th>Kecamatan</th>\r\n                                        <th>Organosol</th>\r\n                                        <th>Alluvial</th>\r\n                                        <th>Pedsol</th>\r\n                                        <th>Latosol</th>\r\n                                        <th>PMK</th>\r\n                                    </tr>\r\n                                    {datas_geo.map((v, i) =>\r\n                                        <tr>\r\n                                            <td style={{ width: 250 }}> {v.nama_kecamatan}</td>\r\n                                            <td>\r\n                                                <NumberFormat\r\n                                                    value={v.jt_organosol}\r\n                                                    displayType={'text'}\r\n                                                    thousandSeparator={true}\r\n                                                    renderText={formattedValue => <span >{formattedValue} ha</span>}\r\n                                                />\r\n                                            </td>\r\n                                            <td>\r\n                                                <NumberFormat\r\n                                                    value={v.jt_alluvial}\r\n                                                    displayType={'text'}\r\n                                                    thousandSeparator={true}\r\n                                                    renderText={formattedValue => <span >{formattedValue} ha</span>}\r\n                                                />\r\n                                            </td>\r\n                                            <td>\r\n                                                <NumberFormat\r\n                                                    value={v.jt_pedsol}\r\n                                                    displayType={'text'}\r\n                                                    thousandSeparator={true}\r\n                                                    renderText={formattedValue => <span >{formattedValue} ha</span>}\r\n                                                />\r\n                                            </td>\r\n                                            <td><NumberFormat\r\n                                                value={v.jt_latosol}\r\n                                                displayType={'text'}\r\n                                                thousandSeparator={true}\r\n                                                renderText={formattedValue => <span >{formattedValue} ha</span>}\r\n                                            /></td>\r\n                                            <td><NumberFormat\r\n                                                value={v.jt_pmk}\r\n                                                displayType={'text'}\r\n                                                thousandSeparator={true}\r\n                                                renderText={formattedValue => <span >{formattedValue} ha</span>}\r\n                                            /></td>\r\n                                        </tr>\r\n                                    )}\r\n\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"main-content\">\r\n                <div className=\"header\">\r\n                    <p>Penduduk</p>\r\n                </div>\r\n                <div className=\"flex-row\">\r\n                    <div className=\"w-40 p-20 \">\r\n                        <div className=\"cards p-20 w-100 bg-green flex-column\">\r\n                            <NumberFormat\r\n                                value={datas_pen.length !== 0 ? parseInt(datas_pen.data[0].total_perempuan[0].total_perempuan) + parseInt(datas_pen.data[0].total_laki[0].total_laki) : ''}\r\n                                displayType={'text'}\r\n                                thousandSeparator={true}\r\n                                renderText={formattedValue => <span className=\"h1-main\">{formattedValue} </span>}\r\n                            />\r\n                            <br />\r\n                            <p>Jumlah Penduduk Kota Singkawang</p>\r\n                        </div>\r\n                        <div className=\"cards flex-row w-100\">\r\n                            <div className=\"cards bg-blue p-20 w-50 flex-col\" style={{ textAlign: 'center' }} >\r\n                                <div className=\"w-100\">\r\n                                    <img src={man} className=\"w-100\" />\r\n                                </div>\r\n                                <div className=\"w-100\">\r\n                                    <NumberFormat\r\n                                        value={datas_pen.length !== 0 ? datas_pen.data[0].total_laki[0].total_laki : ''}\r\n                                        displayType={'text'}\r\n                                        thousandSeparator={true}\r\n                                        renderText={formattedValue => <span className=\"h1-sub\">{formattedValue} </span>}\r\n                                    />\r\n                                    <p>Laki laki</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"cards bg-pink p-20 w-50 flex-col\" style={{ textAlign: 'center' }} >\r\n                                <div className=\"w-100\">\r\n                                    <img src={woman} className=\"w-100\" />\r\n                                </div>\r\n                                <div className=\"w-100\">\r\n                                    <NumberFormat\r\n                                        value={datas_pen.length !== 0 ? datas_pen.data[0].total_perempuan[0].total_perempuan : ''}\r\n                                        displayType={'text'}\r\n                                        thousandSeparator={true}\r\n                                        renderText={formattedValue => <span className=\"h1-sub\">{formattedValue} </span>}\r\n                                    />\r\n                                    <p>Perempuan</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"w-60 p-20\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"flex-col p-20 w-100\">\r\n                    {datas_pen.length !== 0 ?\r\n                        datas_pen.kec.map((v, i) =>\r\n\r\n                            <div key={i} className=\"flex-row border-grey mb-20 w-100 \">\r\n\r\n                                <div className=\"flex-col w-40 pr-10\">\r\n                                    <div className=\"cards p-20 w-100 bg-imperial flex-column\">\r\n                                        <span >{v.nama_kecamatan} </span>\r\n                                    </div>\r\n                                    <div className=\"cards p-20 w-100 bg-blue flex-column\">\r\n                                        <NumberFormat\r\n                                            value={v.jumlah_penduduk[0].jumlah_laki}\r\n                                            displayType={'text'}\r\n                                            thousandSeparator={true}\r\n                                            renderText={formattedValue => <span className=\"h1-sub\">{formattedValue} </span>}\r\n                                        />\r\n                                        <br />\r\n                                        <p>Laki Laki</p>\r\n                                    </div>\r\n                                    <div className=\"cards p-20 w-100 bg-pink flex-column\">\r\n                                        <NumberFormat\r\n                                            value={v.jumlah_penduduk[0].jumlah_perempuan}\r\n                                            displayType={'text'}\r\n                                            thousandSeparator={true}\r\n                                            renderText={formattedValue => <span className=\"h1-sub\">{formattedValue} </span>}\r\n                                        />\r\n                                        <br />\r\n                                        <p>Perempuan</p>\r\n                                    </div>\r\n                                    <div className=\"cards p-20 w-100 bg-green flex-column\">\r\n                                        <NumberFormat\r\n                                            value={parseInt(v.jumlah_penduduk[0].jumlah_perempuan) + parseInt(v.jumlah_penduduk[0].jumlah_laki)}\r\n                                            displayType={'text'}\r\n                                            thousandSeparator={true}\r\n                                            renderText={formattedValue => <span className=\"h1-sub\">{formattedValue} </span>}\r\n                                        />\r\n                                        <br />\r\n                                        <p>Total Penduduk {v.nama_kecamatan}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"flex-col w-60 flex-center pr-10\">\r\n                                    <table id=\"customers2\">\r\n                                        <tr>\r\n                                            <th>Kelurahan</th>\r\n                                            <th>Laki - laki</th>\r\n                                            <th>Perempuan</th>\r\n                                            <th>Jumlah</th>\r\n                                        </tr>\r\n                                        {v.jumlah_penduduk_per_kelurahan.map((vx, i) =>\r\n                                            <tr key={i}>\r\n                                                <td>{vx.nama_kelurahan}</td>\r\n                                                <td>\r\n                                                    <NumberFormat\r\n                                                        value={vx.laki}\r\n                                                        displayType={'text'}\r\n                                                        thousandSeparator={true}\r\n                                                        renderText={formattedValue => <>{formattedValue} </>}\r\n                                                    />\r\n                                                </td>\r\n                                                <td>\r\n                                                    <NumberFormat\r\n                                                        value={vx.perempuan}\r\n                                                        displayType={'text'}\r\n                                                        thousandSeparator={true}\r\n                                                        renderText={formattedValue => <>{formattedValue} </>}\r\n                                                    />\r\n                                                </td>\r\n                                                <td>\r\n                                                    <NumberFormat\r\n                                                        value={parseInt(vx.laki) + parseInt(vx.perempuan)}\r\n                                                        displayType={'text'}\r\n                                                        thousandSeparator={true}\r\n                                                        renderText={formattedValue => <>{formattedValue} </>}\r\n                                                    />\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                        :\r\n                        ''\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"main-content\">\r\n                <div className=\"header\">\r\n                    <p>Agama</p>\r\n                </div>\r\n                <div className=\"flex-row\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"main-content\">\r\n                <div className=\"header\">\r\n                    <p>Footer</p>\r\n                </div>\r\n                <div className=\"flex-row\">\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n        </text>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => {\r\n    return {\r\n        datas_geo: app.datas_geo,\r\n        luas_chart: app.luas_chart,\r\n        datas_pen: app.datas_pen\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getDataGeo: () => dispatch(getDataGeo()),\r\n        getDataPen: () => dispatch(getDataPen())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { getTempatIbadah } from '../../store/app/action';\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\n\r\n\r\n\r\nfunction Pancagatra({ datas_tempat_ibadah, getTempatIbadah }) {\r\n\r\n    React.useEffect(() => {\r\n        getTempatIbadah()\r\n    }, [])\r\n\r\n    const [datatable, setDatatable] = React.useState({\r\n        columns: [\r\n            {\r\n                label: 'Nama Tempat Ibadah',\r\n                field: 'nama_tempat_ibadah',\r\n                width: 150,\r\n                attributes: {\r\n                    'aria-controls': 'DataTable',\r\n                    'aria-label': 'Name',\r\n                },\r\n            },\r\n            {\r\n                label: 'Jenis Tempat Ibadah',\r\n                field: 'jenis',\r\n                width: 270,\r\n            },\r\n            {\r\n                label: 'Kecamatan',\r\n                field: 'nama_kecamatan',\r\n                width: 200,\r\n            },\r\n            {\r\n                label: 'Kontak',\r\n                field: 'no_telp',\r\n                sort: 'asc',\r\n                width: 100,\r\n            },\r\n\r\n        ],\r\n        rows: datas_tempat_ibadah\r\n    });\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"main-content\">\r\n                <div className=\"header\">\r\n                    <p>Pemerintahan Kota Singkawang</p>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"main-content\">\r\n                <div className=\"header\">\r\n                    <p>Tempat Ibadah</p>\r\n                </div>\r\n                <div className=\"flex-col p-20\">\r\n                    <div className=\"border-grey p-20\">\r\n                        <MDBDataTableV5 hover entriesOptions={[5, 20, 25]} entries={10} pagesAmount={4} data={datatable} searchTop searchBottom={false} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"main-content\">\r\n                <div className=\"header\">\r\n                    <p>Perusahaan</p>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => {\r\n    return {\r\n        datas_tempat_ibadah: app.datas_tempat_ibadah,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getTempatIbadah: () => dispatch(getTempatIbadah()),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pancagatra);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nexport const Covid = (props) => {\r\n    const [numPages, setNumPages] = React.useState(null);\r\n    const [pageNumber, setPageNumber] = React.useState(6);\r\n\r\n    function onDocumentLoadSuccess({ numPages }) {\r\n        setNumPages(numPages);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-content\">\r\n                <div className=\"header\">\r\n                    <p>Penyebaran Covid 19 Kota Singkawang</p>\r\n                </div>\r\n                <div className=\"w-100 p-20\" >\r\n                    <Document\r\n                       \r\n                        file=\"https://dinartech.com/ar/pdf-skw.pdf\"\r\n                        onLoadSuccess={onDocumentLoadSuccess}\r\n                    >\r\n                        {[1, 2, 3, 4, 5, 6].map(pageNumber => (\r\n                            <Page pageNumber={pageNumber} />\r\n                        ))}\r\n                    </Document>\r\n                    {/* <p>Page {pageNumber} of {numPages}</p> */}\r\n                </div>\r\n            </div>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Covid)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    Route,\r\n    NavLink,\r\n    HashRouter\r\n} from \"react-router-dom\";\r\nimport Dashboard from './pages/Dashboard';\r\nimport Pancagatra from './pages/Pancagatra';\r\nimport Covid from './pages/Covid';\r\n\r\nimport './style/style.css';\r\n\r\nexport const RootApp = (props) => {\r\n\r\n    const sideBarEvent = () => {\r\n        document.querySelector(\".sidebar\").classList.toggle('open')\r\n        menuBtnChange()\r\n    }\r\n\r\n    const menuBtnChange = () => {\r\n        if (document.querySelector(\".sidebar\").classList.contains(\"open\")) {\r\n            document.querySelector(\"#btn\").classList.replace(\"bx-menu\", \"bx-menu-alt-right\");//replacing the iocns class\r\n        } else {\r\n            document.querySelector(\"#btn\").classList.replace(\"bx-menu-alt-right\", \"bx-menu\");//replacing the iocns class\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <HashRouter>\r\n            <div>\r\n                <div className=\"sidebar open\">\r\n                    {/* <div className=\"logo-details\">\r\n                        <i className='bx bxl-c-plus-plus icon'></i>\r\n                        <div className=\"logo_name\">CodingLab</div>\r\n                        <i className='bx bx-menu' id=\"btn\" onClick={sideBarEvent}></i>\r\n                    </div> */}\r\n                    <ul className=\"nav-list\">\r\n                        <li>\r\n                            <a href=\"#\">\r\n                                <NavLink to=\"/\">\r\n                                    <i className='bx bx-grid-alt'></i>\r\n                                    <span className=\"links_name\">Trigatra</span>\r\n                                </NavLink>\r\n                            </a>\r\n                            <span className=\"tooltip\">Trigatra</span>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#\">\r\n                                <NavLink to=\"/pancagatra\">\r\n                                    <i className='bx bx-user' ></i>\r\n                                    <span className=\"links_name\">Pancagatra</span>\r\n                                </NavLink>\r\n                            </a>\r\n                            <span className=\"tooltip\">Pancagatra</span>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <a href=\"#\">\r\n                                <NavLink to=\"/pancagatra\">\r\n                                    <i className='bx bx-calendar' ></i>\r\n                                    <span className=\"links_name\">Kalender</span>\r\n                                </NavLink>\r\n                            </a>\r\n                            <span className=\"tooltip\">Kalender</span>\r\n                        </li>                        <li>\r\n                            <a href=\"#\">\r\n                                <NavLink to=\"/covid\">\r\n                                    <i className='bx bxs-virus' ></i>\r\n                                    <span className=\"links_name\">Covid 19</span>\r\n                                </NavLink>\r\n                            </a>\r\n                            <span className=\"tooltip\">Covid 19</span>\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n                <section className=\"home-section\">\r\n                    <Route exact path=\"/\" component={Dashboard} />\r\n                    <Route path=\"/pancagatra\" component={Pancagatra} />\r\n                    <Route path=\"/covid\" component={Covid} />\r\n                </section>\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RootApp)\r\n","  \r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport Store from './store/createStore';\r\nimport RootApp from './components/RootApp';\r\n\r\nfunction App() {\r\n    return (\r\n        <Provider store={Store}>\r\n            <RootApp />\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \r\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}